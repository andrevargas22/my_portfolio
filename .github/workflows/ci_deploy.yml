name: CI & Deploy

on:
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  audit:
    name: Dependency & Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pip-audit

      - name: Vulnerability audit
        run: |
          pip-audit -r requirements.txt --progress-spinner off

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: [ audit ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      REGION: us-central1
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      REPOSITORY: website-repo
      SERVICE_ACCOUNT: site-sa
      SERVICE_NAME: website
      MNIST_ENDPOINT: ${{ secrets.MNIST_API_ENDPOINT }}
      MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.WORKFLOW_TRIGGER_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: 'auth'
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Configure Docker auth
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build container
        run: |
          docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/website:${{ github.sha }}" .

      - name: Push container
        run: |
          docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/website:${{ github.sha }}"

      - name: Deploy Cloud Run
        run: |
          gcloud run deploy "${{ env.SERVICE_NAME }}" \
            --image "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/website:${{ github.sha }}" \
            --region "${{ env.REGION }}" \
            --service-account "${{ env.SERVICE_ACCOUNT }}" \
            --memory 2Gi \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars "MNIST_ENDPOINT=${{ env.MNIST_ENDPOINT }},MAPBOX_ACCESS_TOKEN=${{ env.MAPBOX_ACCESS_TOKEN }},GITHUB_TOKEN=${{ env.GITHUB_TOKEN }}"
